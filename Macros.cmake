# - Check glibc version
# CHECK_GLIBC_VERSION()
# 
# Once done this will define
#
#   GLIBC_VERSION - glibc version
#
MACRO (CHECK_GLIBC_VERSION)
    EXECUTE_PROCESS (
        COMMAND ${CMAKE_C_COMPILER} -print-file-name=libc.so.6
	OUTPUT_VARIABLE GLIBC
	OUTPUT_STRIP_TRAILING_WHITESPACE)

    GET_FILENAME_COMPONENT (GLIBC ${GLIBC} REALPATH)
    GET_FILENAME_COMPONENT (GLIBC_VERSION ${GLIBC} NAME)
    STRING (REPLACE "libc-" "" GLIBC_VERSION ${GLIBC_VERSION})
    STRING (REPLACE ".so" "" GLIBC_VERSION ${GLIBC_VERSION})
    IF (NOT GLIBC_VERSION MATCHES "^[0-9.]+$")
        MESSAGE (FATAL_ERROR "Unknown glibc version: ${GLIBC_VERSION}")
    ENDIF (NOT GLIBC_VERSION MATCHES "^[0-9.]+$")
ENDMACRO (CHECK_GLIBC_VERSION)

macro(create_package_target NAME VERSION)
	add_custom_target(${NAME}_package ALL 
		COMMAND ${CMAKE_COMMAND} -P ${BUILD_DIR}/${NAME}/install/package.cmake 
		COMMAND ${CMAKE_COMMAND} -E tar "cfJ" "${PACKAGE_DIR}/${NAME}_${VERSION}_${TOOLSET}.tar.xz" "${BUILD_DIR}/${NAME}/post_install/${NAME}"
		COMMENT "Packaging ${NAME}"
		DEPENDS ${NAME}
	)
	list(APPEND ALL_TARGETS ${NAME}_package)
	list(APPEND ALL_PACKAGES ${PACKAGE_DIR}/${NAME}_${VERSION}_${TOOLSET}.tar.xz)
	#set(ALL_TARGETS ${ALL_TARGETS} PARENT_SCOPE)
	#set(ALL_PACKAGES ${ALL_PACKAGES} PARENT_SCOPE)
endmacro()
